---
import Layout from "../layouts/Page.astro";
import type { Props as BaseHeadProps } from "../components/BaseHead.astro";

import { Schema } from "astro-seo-schema";

export interface Props {
  seo?: BaseHeadProps;
  articleShemaInfo: any;
}

const { seo, articleShemaInfo } = Astro.props as Props;
const positiveNotes = articleShemaInfo.pros.map((pro, index) => {
  return {
    "@type": "ListItem",
    position: index + 1,
    name: pro,
  };
});

const negativeNotes = articleShemaInfo.cons.map((con, index) => {
  return {
    "@type": "ListItem",
    position: index + 1,
    name: con,
  };
});

const titleWithoutReviewOrType = articleShemaInfo.title
  .replace(articleShemaInfo.type, "")
  .replace("Review", "")
  .replace("Movie", "")
  .replace("TV", "")
  .replace("Series", "")
  .replace("Show", "")
  .replace("Season", "")
  .replace("Episode", "")
  .replace("Book", "")
  .replace("Game", "")
  .trim();
---

<Layout seo={seo}>
  <Fragment>
    <Schema
      item={{
        "@context": "https://schema.org",
        "@type": "BlogPosting",
        headline: articleShemaInfo.title,
        datePublished: articleShemaInfo.date,
        author: {
          "@type": "Person",
          name: "Nirjan Khadka",
          url: "https://reviews.nirjan.net/about",
        },
        keywords: articleShemaInfo.keywords,
      }}
    />

    <Schema
      item={{
        "@context": "https://schema.org",
        "@type": "Review",
        reviewRating: {
          "@type": "Rating",
          ratingValue: articleShemaInfo.rating,
          bestRating: "5",
          worstRating: "0",
        },
        itemReviewed: {
          "@type": articleShemaInfo.type,
          name: titleWithoutReviewOrType,
        },
        positiveNotes: positiveNotes,
        negativeNotes: negativeNotes,
      }}
    />
  </Fragment>
  <slot />
</Layout>
